pipeline {

   agent {
       docker {
           image 'maven:3-alpine'
           args '-v $HOME/.m2:/root/.m2 -v $HOME/settings.xml:/my/settings.xml:ro --env JAVA_OPTS="-Dhttp.proxyHost=172.17.7.137 -Dhttp.proxyPort=3129 -Dhttps.proxyHost=172.17.7.137 -Dhttps.proxyPort=3129" --env http_proxy="http://172.17.7.137:3129/" --env  https_proxy="http://172.17.7.137:3129/"'
         }
   }

//   environment{
//       JAVA_OPTS = "-Dhttp.proxyHost=172.17.7.137 -Dhttp.proxyPort=3129 -Dhttps.proxyHost=172.17.7.137 -Dhttps.proxyPort=3129"
//       http_proxy = "http://172.17.7.137:3129/"
//       https_proxy = "http://172.17.7.137:3129/"
//     }


   stages {
      stage('build') {
         when{
           changeset "**/worker/**"
         }
         steps {
            echo 'Compiling worker app'
            dir('worker'){
              sh 'env'
              sh 'cat /my/settings.xml'
              sh 'mvn -s /my/settings.xml compile'
              
            }
         }
      }
      
      stage('test') {
         when{
          changeset "**/worker/**"
         }
         steps {
            echo 'Running Unit Tests on worker app'
            dir('worker'){
              sh 'mvn clean test'
            }            
         }
      }
      
      stage('package') {
         when{
           branch "master"
           changeset "**/worker/**"
         }
         steps {
            echo 'Building worker app'
            dir('worker'){
              sh 'mvn package -Dskiptests'
            }            
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
         }
      }
   }
   post{
       always{
           echo 'Build pipeline for worker is completed'
       }
       failure{
         slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>))")
       }
       success{
         slackSend (channel: "instavote-cd", message: "Build Succeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>))")
           
       }
   }
}
